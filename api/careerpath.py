# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ivDsSg9TI6oXUY3hGQ1t0YTzmO9E4EfN
"""
import spacy


nlp = spacy.load("en_core_web_sm")


def extract_career_path(cv_text):
    doc = nlp(cv_text)

    # Extracting important information from the CV
    skills = []
    work_experience = []
    education = []

    for sent in doc.sents:
        if "skill" in sent.text or "expertise" in sent.text:
            for token in sent:
                if token.pos_ == "NOUN" and not token.is_stop:
                    skills.append(token.text)

        if "work experience" in sent.text or "professional experience" in sent.text:
            work_experience.append(sent.text)

        if "education" in sent.text or "qualification" in sent.text:
            education.append(sent.text)

    # Comparing information with different career paths
    with open("career_paths.txt", "r") as f:
        career_paths = [line.strip().lower() for line in f]

    career_scores = {career: 0 for career in career_paths}

    for career in career_scores.keys():
        for skill in skills:
            if skill in career:
                career_scores[career] += 1

        for experience in work_experience:
            if experience in career:
                career_scores[career] += 1

        for edu in education:
            if edu in career:
                career_scores[career] += 1

    # Returning the career path with the highest score
    return max(career_scores, key=career_scores.get)


with open("cv.txt", "r") as f:
    cv_text = f.read()

career_path = extract_career_path(cv_text)

print("Career Path:", career_path)
